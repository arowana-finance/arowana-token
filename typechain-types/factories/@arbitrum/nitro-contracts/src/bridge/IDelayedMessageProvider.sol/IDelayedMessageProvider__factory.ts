/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IDelayedMessageProvider,
  IDelayedMessageProviderInterface,
} from "../../../../../../@arbitrum/nitro-contracts/src/bridge/IDelayedMessageProvider.sol/IDelayedMessageProvider.js";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageNum",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "InboxMessageDelivered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "messageNum",
        type: "uint256",
      },
    ],
    name: "InboxMessageDeliveredFromOrigin",
    type: "event",
  },
] as const;

export class IDelayedMessageProvider__factory {
  static readonly abi = _abi;
  static createInterface(): IDelayedMessageProviderInterface {
    return new Interface(_abi) as IDelayedMessageProviderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null,
  ): IDelayedMessageProvider {
    return new Contract(
      address,
      _abi,
      runner,
    ) as unknown as IDelayedMessageProvider;
  }
}
