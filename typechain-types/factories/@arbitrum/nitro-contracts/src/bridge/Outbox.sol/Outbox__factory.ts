/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../common.js";
import type {
  Outbox,
  OutboxInterface,
} from "../../../../../../@arbitrum/nitro-contracts/src/bridge/Outbox.sol/Outbox.js";

const _abi = [
  {
    inputs: [],
    name: "AlreadyInit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "AlreadySpent",
    type: "error",
  },
  {
    inputs: [],
    name: "BadPostUpgradeInit",
    type: "error",
  },
  {
    inputs: [],
    name: "BridgeCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "HadZeroInit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "actualLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxProofLength",
        type: "uint256",
      },
    ],
    name: "MerkleProofTooLong",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "rollup",
        type: "address",
      },
    ],
    name: "NotRollup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxIndex",
        type: "uint256",
      },
    ],
    name: "PathNotMinimal",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proofLength",
        type: "uint256",
      },
    ],
    name: "ProofTooLong",
    type: "error",
  },
  {
    inputs: [],
    name: "RollupNotChanged",
    type: "error",
  },
  {
    inputs: [],
    name: "SimulationOnlyEntrypoint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "UnknownRoot",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "l2Sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "zero",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionIndex",
        type: "uint256",
      },
    ],
    name: "OutBoxTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "outputRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "l2BlockHash",
        type: "bytes32",
      },
    ],
    name: "SendRootUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "OUTBOX_VERSION",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "contract IBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "l2Sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "l2Block",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "l1Block",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "l2Timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "calculateItemHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "path",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "item",
        type: "bytes32",
      },
    ],
    name: "calculateMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "l2Sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "l2Block",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "l1Block",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "l2Timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "l2Sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "l2Block",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "l1Block",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "l2Timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeTransactionSimulation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBridge",
        name: "_bridge",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1BatchNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1Block",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1EthBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1OutputId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1Sender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ToL1Timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "postUpgradeInit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "spent",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateRollupAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "l2BlockHash",
        type: "bytes32",
      },
    ],
    name: "updateSendRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405230608052348015601357600080fd5b506080516116b66100366000396000818161066a015261088a01526116b66000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c806395fcea78116100ad578063c4d66de811610071578063c4d66de81461023e578063c75184df14610251578063cb23bcb514610271578063d5b5cc2314610284578063e78cea92146102a457600080fd5b806395fcea78146101e85780639f0c04bf146101f0578063a04cee6014610203578063ae6dead714610216578063b0f305371461023657600080fd5b80635a129efe116100f45780635a129efe1461018d5780636ae71f12146101b057806372f2a8c7146101b857806380648b02146101c05780638515bc6a146101e057600080fd5b80627436d31461013057806308635a9514610156578063119852711461016b578063288e5b10146101725780634654779014610185575b600080fd5b61014361013e366004610f90565b6102b7565b6040519081526020015b60405180910390f35b6101696101643660046110be565b6102f4565b005b6000610143565b6101696101803660046111bb565b610367565b6101436103a2565b6101a061019b366004611257565b6103d6565b604051901515815260200161014d565b6101696103f3565b6101436105df565b6101c86105fa565b6040516001600160a01b03909116815260200161014d565b610143610620565b610169610660565b6101436101fe366004611270565b61078f565b6101696102113660046112ff565b6107d4565b610143610224366004611257565b60036020526000908152604090205481565b610143610853565b61016961024c366004611321565b610880565b610259600281565b6040516001600160801b03909116815260200161014d565b6000546101c8906001600160a01b031681565b610143610292366004611257565b60026020526000908152604090205481565b6001546101c8906001600160a01b031681565b60006102ec8484846040516020016102d191815260200190565b60405160208183030381529060405280519060200120610a0f565b949350505050565b6000610306898989898989898961078f565b90506103488c8c808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508e9250859150610ab19050565b6103598a8a8a8a8a8a8a8a8a610bba565b505050505050505050505050565b331561038657604051630e13b69d60e01b815260040160405180910390fd5b610397898989898989898989610bba565b505050505050505050565b6004546000906001600160801b03166002600160801b031981016103c857600091505090565b6001600160801b0316919050565b60008060006103e484610e44565b92509250506102ec8282610e81565b60008054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610444573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104689190611345565b6001600160a01b0316336001600160a01b03161461051e5760005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa1580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed9190611345565b604051631194af8760e11b81526001600160a01b039283166004820152911660248201526044015b60405180910390fd5b6001546040805163cb23bcb560e01b815290516000926001600160a01b03169163cb23bcb59160048083019260209291908290030181865afa158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190611345565b6000549091506001600160a01b038083169116036105bd5760405163d054909f60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600554600090600181016105f557506000919050565b919050565b6006546000906001600160a01b03166002600160a01b031981016105f557600091505090565b600654600090600160a01b90046001600160601b03166bfffffffffffffffffffffffe19810161065257600091505090565b6001600160601b0316919050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036106a85760405162461bcd60e51b815260040161051590611362565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61038054336001600160a01b0382161461070557604051631194af8760e11b81523360048201526001600160a01b0382166024820152604401610515565b6004546001600160801b03908116146107315760405163d0afb66160e01b815260040160405180910390fd5b50506040805160c0810182526001600160801b0380825260208201526000199181018290526001600160a01b0360608201526001600160601b036080820152600060a090910181905260048290556005829055600691909155600755565b600088888888888888886040516020016107b09897969594939291906113ae565b60405160208183030381529060405280519060200120905098975050505050505050565b6000546001600160a01b0316331461081457600054604051630e4cf1bf60e21b81523360048201526001600160a01b039091166024820152604401610515565b60008281526003602052604080822083905551829184917fb4df3847300f076a369cd76d2314b470a1194d9e8a6bb97f1860aee88a5f67489190a35050565b600454600090600160801b90046001600160801b03166002600160801b031981016103c857600091505090565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036108c85760405162461bcd60e51b815260040161051590611362565b6001600160a01b0381166108ef57604051631ad0f74360e01b815260040160405180910390fd5b6001546001600160a01b03161561091957604051633bcd329760e21b815260040160405180910390fd5b6040805160c0810182526001600160801b038082526020808301919091526000198284018190526001600160a01b03606084018190526001600160601b036080850152600060a090940184905260048281556005839055600692909255600793909355600180546001600160a01b0319169386169384179055835163cb23bcb560e01b81529351929363cb23bcb593818301939290918290030181865afa1580156109c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ec9190611345565b600080546001600160a01b0319166001600160a01b039290921691909117905550565b8251600090610100811115610a4257604051637ed6198f60e11b8152600481018290526101006024820152604401610515565b8260005b82811015610aa7576000878281518110610a6257610a62611405565b60200260200101519050816001901b8716600003610a8e57826000528060205260406000209250610a9e565b8060005282602052604060002092505b50600101610a46565b5095945050505050565b610100835110610ad957825160405163ab6a068360e01b815260040161051591815260200190565b8251610ae6906002611518565b8210610b1d578183516002610afb9190611518565b604051630b8a724b60e01b815260048101929092526024820152604401610515565b6000610b2a8484846102b7565b600081815260036020526040902054909150610b5c576040516310e61af960e31b815260048101829052602401610515565b6000806000610b6a86610e44565b925092509250610b7a8282610e81565b15610b9b57604051639715b8d360e01b815260048101879052602401610515565b600092835260026020526040909220600190911b909117905550505050565b6000886001600160a01b0316886001600160a01b03167f20af7f3bbfe38132b8900ae295cd9c8d1914be7052d061a511f3f728dab189648c604051610c0191815260200190565b60405180910390a46000839050600060046040518060c00160405290816000820160009054906101000a90046001600160801b03166001600160801b03166001600160801b031681526020016000820160109054906101000a90046001600160801b03166001600160801b03166001600160801b03168152602001600182015481526020016002820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016002820160149054906101000a90046001600160601b03166001600160601b03166001600160601b0316815260200160038201548152505090506040518060c00160405280896001600160801b03168152602001876001600160801b031681526020018c60001b81526020018b6001600160a01b03168152602001886001600160601b03168152602001610d47600090565b905280516020808301516001600160801b03908116600160801b02921691909117600455604080830151600555606083015160808401516001600160601b0316600160a01b026001600160a01b039091161760065560a0909201516007558151601f8601829004820281018201909252848252610de3918b918591908890889081908401838280828437600092019190915250610e9092505050565b805160208201516001600160801b03908116600160801b029116176004556040810151600555606081015160808201516001600160601b0316600160a01b026001600160a01b039091161760065560a0015160075550505050505050505050565b6000808080610e5460ff8661153a565b90506000610e6360ff8761154e565b60008381526002602052604090205492979096509194509092505050565b80821c60011615155b92915050565b600154604051639e5d4c4960e01b815260009182916001600160a01b0390911690639e5d4c4990610ec990889088908890600401611586565b6000604051808303816000875af1158015610ee8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f1091908101906115cf565b9150915081610f4257805115610f295780518082602001fd5b604051631bb7daad60e11b815260040160405180910390fd5b5050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f8857610f88610f49565b604052919050565b600080600060608486031215610fa557600080fd5b833567ffffffffffffffff811115610fbc57600080fd5b8401601f81018613610fcd57600080fd5b803567ffffffffffffffff811115610fe757610fe7610f49565b8060051b610ff760208201610f5f565b9182526020818401810192908101908984111561101357600080fd5b6020850194505b838510156110395784358083526020958601959093509091019061101a565b9960208901359950604090980135979650505050505050565b6001600160a01b038116811461106757600080fd5b50565b80356105f581611052565b60008083601f84011261108757600080fd5b50813567ffffffffffffffff81111561109f57600080fd5b6020830191508360208285010111156110b757600080fd5b9250929050565b60008060008060008060008060008060006101208c8e0312156110e057600080fd5b8b3567ffffffffffffffff8111156110f757600080fd5b8c01601f81018e1361110857600080fd5b803567ffffffffffffffff81111561111f57600080fd5b8e60208260051b840101111561113457600080fd5b60209182019c509a508c0135985061114e60408d0161106a565b975061115c60608d0161106a565b965060808c0135955060a08c0135945060c08c0135935060e08c013592506101008c013567ffffffffffffffff81111561119557600080fd5b6111a18e828f01611075565b915080935050809150509295989b509295989b9093969950565b60008060008060008060008060006101008a8c0312156111da57600080fd5b8935985060208a01356111ec81611052565b975060408a01356111fc81611052565b965060608a0135955060808a0135945060a08a0135935060c08a0135925060e08a013567ffffffffffffffff81111561123457600080fd5b6112408c828d01611075565b915080935050809150509295985092959850929598565b60006020828403121561126957600080fd5b5035919050565b60008060008060008060008060e0898b03121561128c57600080fd5b883561129781611052565b975060208901356112a781611052565b965060408901359550606089013594506080890135935060a0890135925060c089013567ffffffffffffffff8111156112df57600080fd5b6112eb8b828c01611075565b999c989b5096995094979396929594505050565b6000806040838503121561131257600080fd5b50508035926020909101359150565b60006020828403121561133357600080fd5b813561133e81611052565b9392505050565b60006020828403121561135757600080fd5b815161133e81611052565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6001600160601b03198960601b1681526001600160601b03198860601b166014820152866028820152856048820152846068820152836088820152818360a88301376000910160a801908152979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561146c578085048111156114505761145061141b565b600184161561145e57908102905b60019390931c928002611435565b935093915050565b60008261148357506001610e8a565b8161149057506000610e8a565b81600181146114a657600281146114b0576114cc565b6001915050610e8a565b60ff8411156114c1576114c161141b565b50506001821b610e8a565b5060208310610133831016604e8410600b84101617156114ef575081810a610e8a565b6114fc6000198484611431565b80600019048211156115105761151061141b565b029392505050565b600061133e8383611474565b634e487b7160e01b600052601260045260246000fd5b60008261154957611549611524565b500490565b60008261155d5761155d611524565b500690565b60005b8381101561157d578181015183820152602001611565565b50506000910152565b60018060a01b038416815282602082015260606040820152600082518060608401526115b9816080850160208701611562565b601f01601f191691909101608001949350505050565b600080604083850312156115e257600080fd5b825180151581146115f257600080fd5b602084015190925067ffffffffffffffff81111561160f57600080fd5b8301601f8101851361162057600080fd5b805167ffffffffffffffff81111561163a5761163a610f49565b61164d601f8201601f1916602001610f5f565b81815286602083850101111561166257600080fd5b611673826020830160208601611562565b809350505050925092905056fea26469706673582212207104442fadc9a7521ef8f71e8ef2efdd1998a3762860253a98a2366fe5a1cd3464736f6c634300081e0033";

type OutboxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OutboxConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Outbox__factory extends ContractFactory {
  constructor(...args: OutboxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Outbox & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Outbox__factory {
    return super.connect(runner) as Outbox__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OutboxInterface {
    return new Interface(_abi) as OutboxInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Outbox {
    return new Contract(address, _abi, runner) as unknown as Outbox;
  }
}
