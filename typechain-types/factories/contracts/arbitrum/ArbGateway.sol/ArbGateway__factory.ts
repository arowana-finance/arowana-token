/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common.js";
import type {
  ArbGateway,
  ArbGatewayInterface,
} from "../../../../contracts/arbitrum/ArbGateway.sol/ArbGateway.js";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "BridgedCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "BridgedFrom",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "msg",
        type: "string",
      },
    ],
    name: "BridgedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bridgeID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "BridgedTo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "arbSys",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "inbox",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "otherGateway",
        type: "address",
      },
    ],
    name: "InitializedGateway",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "home",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "other",
        type: "address",
      },
    ],
    name: "SetOtherToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "shouldBurn",
        type: "bool",
      },
    ],
    name: "SetToBurn",
    type: "event",
  },
  {
    inputs: [],
    name: "arbsys",
    outputs: [
      {
        internalType: "contract ArbSys",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "bridgeFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_msg",
        type: "string",
      },
    ],
    name: "bridgeMsg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Mintable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "maxSubmissionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPriceBid",
        type: "uint256",
      },
    ],
    name: "bridgeTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Mintable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "maxSubmissionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPriceBid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "bridgeToPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromValue",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromDecimals",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "toDecimals",
        type: "uint8",
      },
    ],
    name: "convertAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract IInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IInbox",
        name: "_inbox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_otherGateway",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "home",
            type: "address",
          },
          {
            internalType: "address",
            name: "other",
            type: "address",
          },
        ],
        internalType: "struct ArbGateway.OtherTokens[]",
        name: "_otherTokens",
        type: "tuple[]",
      },
    ],
    name: "initializeGateway",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "otherGateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "otherTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "homeToken",
        type: "address",
      },
    ],
    name: "setBurnToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "home",
        type: "address",
      },
      {
        internalType: "address",
        name: "other",
        type: "address",
      },
    ],
    name: "setOtherToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "shouldBurnToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611e3b8061001f6000396000f3fe6080604052600436106100fe5760003560e01c8063b190be8511610095578063e3f30e7111610064578063e3f30e71146102a2578063eac96f23146102d8578063ebde1bdb146102f8578063f2fde38b14610318578063fb0e722b1461033857600080fd5b8063b190be851461020f578063b44db82e1461022f578063c358798014610242578063df36132b1461026257600080fd5b80638da5cb5b116100d15780638da5cb5b1461017357806390f7e1b3146101c4578063a51c8cb9146101e4578063affed0e0146101f957600080fd5b806348875bf51461010357806360e312a714610125578063715018a61461014b57806374378d3714610160575b600080fd5b34801561010f57600080fd5b5061012361011e3660046115d4565b610358565b005b610138610133366004611674565b6103d4565b6040519081526020015b60405180910390f35b34801561015757600080fd5b506101236106f9565b61012361016e36600461170a565b61070d565b34801561017f57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03165b6040516001600160a01b039091168152602001610142565b3480156101d057600080fd5b506001546101ac906001600160a01b031681565b3480156101f057600080fd5b506101ac606481565b34801561020557600080fd5b5061013860045481565b34801561021b57600080fd5b5061013861022a3660046117a8565b61078d565b61013861023d3660046117ea565b6107b8565b34801561024e57600080fd5b5061012361025d3660046118a7565b610873565b34801561026e57600080fd5b5061029261027d3660046118a7565b60036020526000908152604090205460ff1681565b6040519015158152602001610142565b3480156102ae57600080fd5b506101ac6102bd3660046118a7565b6002602052600090815260409020546001600160a01b031681565b3480156102e457600080fd5b506101236102f33660046118c4565b6109fc565b34801561030457600080fd5b506101236103133660046119e9565b610c14565b34801561032457600080fd5b506101236103333660046118a7565b610c7c565b34801561034457600080fd5b506000546101ac906001600160a01b031681565b3330146103985760405162461bcd60e51b815260206004820152600960248201526827a7262cafa9a2a62360b91b60448201526064015b60405180910390fd5b817f07ce1e2038f0bf86b874f8aa890353ddfe00ccba5e000ad4b713e9b2ce90fa72826040516103c89190611a72565b60405180910390a25050565b60006103eb6001600160a01b038916333089610cba565b6001600160a01b03881660009081526003602052604090205460ff161561046757604051630852cd8d60e31b8152600481018790526001600160a01b038916906342966c6890602401600060405180830381600087803b15801561044e57600080fd5b505af1158015610462573d6000803e3d6000fd5b505050505b6000600454905060006374378d3760e01b8a6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104da9190611a85565b6001600160a01b03808d16600090815260026020526040908190205490516105149392919091169033908e908e908e908a90602401611aa2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915260008054919250906001600160a01b0316158061060b5760008054906101000a90046001600160a01b03166001600160a01b031663679b6ded34600160009054906101000a90046001600160a01b031660008c33338e8e8c6040518a63ffffffff1660e01b81526004016105c1989796959493929190611afa565b60206040518083038185885af11580156105df573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106049190611b59565b9150610682565b6001546040516349460b4d60e11b815260649163928c169a9161063c916001600160a01b0316908790600401611b72565b6020604051808303816000875af115801561065b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067f9190611b59565b91505b6004805490600061069283611bac565b9190505550336001600160a01b03168c6001600160a01b0316857f9df4cc1e9776bb39b63370f1f8d003320ceeebe30547208fa83a07a3e984794b858f8f8f6040516106e19493929190611bc5565b60405180910390a450919a9950505050505050505050565b610701610d27565b61070b6000610d82565b565b6107748388886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610750573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190611a85565b9250610784868686868686610df3565b50505050505050565b60006107998284611bfc565b6107a490600a611cfc565b6107ae9085611d0b565b90505b9392505050565b6000806000806107c78561132e565b60405163d505accf60e01b8152336004820152306024820152604481018f9052606481018a905260ff8416608482015260a4810183905260c4810182905292955090935091506001600160a01b038e169063d505accf9060e401600060405180830381600087803b15801561083b57600080fd5b505af115801561084f573d6000803e3d6000fd5b505050506108628d8d8d8d8d8d8d6103d4565b9d9c50505050505050505050505050565b61087b610d27565b6001600160a01b03811660009081526003602052604090205460ff166108a25760016108a5565b60005b6001600160a01b0382166000908152600360205260409020805460ff1916911515918217905560ff16156109a6576040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190611b59565b905080156109a357604051630852cd8d60e31b8152600481018290526001600160a01b038316906342966c6890602401600060405180830381600087803b15801561098a57600080fd5b505af115801561099e573d6000803e3d6000fd5b505050505b50505b6001600160a01b03811660008181526003602090815260409182902054915160ff909216151582527f7740f93df62e6714ab915a82ef699f7a6db1f754498e2e363890d286aba7dcab910160405180910390a250565b6000610a06611378565b805490915060ff600160401b820416159067ffffffffffffffff16600081158015610a2e5750825b905060008267ffffffffffffffff166001148015610a4b5750303b155b905081158015610a59575080155b15610a775760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610aa157845460ff60401b1916600160401b1785555b610aaa896113a3565b600080546001600160a01b038a81166001600160a01b0319928316811790935560018054918b16919092168117909155604080516064815260208101939093528201527f59967eb20e0c027d0c4fe6e11fcec2273a08036e26740962b3ef3a23f107f93c9060600160405180910390a160005b8651811015610bc2576000878281518110610b3a57610b3a611d2d565b602090810291909101810151808201805182516001600160a01b0390811660009081526002865260409081902080546001600160a01b0319169383169390931790925583519251915191811682529294509116917fd7b0a59830045bcaf6233768890edf6fcda71a5654d385440db294eb92b9a7db910160405180910390a250600101610b1d565b508315610c0957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b610c1c610d27565b6001600160a01b0382811660008181526002602090815260409182902080546001600160a01b0319169486169485179055905192835290917fd7b0a59830045bcaf6233768890edf6fcda71a5654d385440db294eb92b9a7db91016103c8565b610c84610d27565b6001600160a01b038116610cae57604051631e4fbdf760e01b81526000600482015260240161038f565b610cb781610d82565b50565b6040516001600160a01b038481166024830152838116604483015260648201839052610d219186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506113b4565b50505050565b33610d597f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b03161461070b5760405163118cdaa760e01b815233600482015260240161038f565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6000546001600160a01b0316158015610e8257600154610e2f906001600160a01b03167311110000000000000000000000000000000011110190565b6001600160a01b0316336001600160a01b031614610e7d5760405162461bcd60e51b815260206004820152600b60248201526a4e4f545f4741544557415960a81b604482015260640161038f565b611058565b60008060009054906101000a90046001600160a01b03166001600160a01b031663e78cea926040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ed6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efa9190611d43565b9050336001600160a01b03821614610f415760405162461bcd60e51b815260206004820152600a6024820152694e4f545f42524944474560b01b604482015260640161038f565b6001546040805163ab5d894360e01b815290516001600160a01b039283169284169163ab5d89439160048083019260209291908290030181865afa158015610f8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb19190611d43565b6001600160a01b03166380648b026040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110129190611d43565b6001600160a01b0316146110565760405162461bcd60e51b815260206004820152600b60248201526a4e4f545f4741544557415960a81b604482015260640161038f565b505b6040516370a0823160e01b8152306004820152879085906001600160a01b038316906370a0823190602401602060405180830381865afa1580156110a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c49190611b59565b106110e2576110dd6001600160a01b0382168787611425565b611145565b6040516340c10f1960e01b81526001600160a01b038781166004830152602482018790528216906340c10f1990604401600060405180830381600087803b15801561112c57600080fd5b505af1158015611140573d6000803e3d6000fd5b505050505b8351156112d45760006348875bf560e01b6111628683600461145b565b61116b90611d60565b6001600160e01b031916149050801561121e576000306001600160a01b0316866040516111989190611d9e565b6000604051808303816000865af19150503d80600081146111d5576040519150601f19603f3d011682016040523d82523d6000602084013e6111da565b606091505b50509050806112185760405162461bcd60e51b815260206004820152600a6024820152691354d1d7d1905253115160b21b604482015260640161038f565b506112d2565b6001600160a01b0387163b156112d257600080886001600160a01b0316620c35008860405161124d9190611d9e565b60006040518083038160008787f1925050503d806000811461128b576040519150601f19603f3d011682016040523d82523d6000602084013e611290565b606091505b5091509150857f840af9ca2ec8c881ca3de23cf221981cd4118acdefeb96233fbdf0e365d7615583836040516112c7929190611dba565b60405180910390a250505b505b866001600160a01b0316886001600160a01b0316847f42365fe0dfe76a5961cdef1960c9135c4097a1b6c253d8c1d74f5d27e41cbb8e89898960405161131c93929190611dd5565b60405180910390a45050505050505050565b600080600083516041036113585750505060208101516040820151606083015160001a9190611371565b604051634be6321b60e01b815260040160405180910390fd5b9193909250565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005b92915050565b6113ab6114c1565b610cb7816114e6565b600080602060008451602086016000885af1806113d7576040513d6000823e3d81fd5b50506000513d915081156113ef5780600114156113fc565b6001600160a01b0384163b155b15610d2157604051635274afe760e01b81526001600160a01b038516600482015260240161038f565b6040516001600160a01b0383811660248301526044820183905261145691859182169063a9059cbb90606401610cef565b505050565b6060835182811161146a578092505b838111611475578093505b50818310156107b15750604051828203848401601f19601f830181165b828101518582015281018061149257505050806020830101600081526020810160405250808252509392505050565b6114c96114ee565b61070b57604051631afcd79f60e31b815260040160405180910390fd5b610c846114c1565b60006114f8611378565b54600160401b900460ff16919050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561154157611541611508565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561157057611570611508565b604052919050565b60008067ffffffffffffffff84111561159357611593611508565b50601f8301601f19166020016115a881611547565b9150508281528383830111156115bd57600080fd5b828260208301376000602084830101529392505050565b600080604083850312156115e757600080fd5b82359150602083013567ffffffffffffffff81111561160557600080fd5b8301601f8101851361161657600080fd5b61162585823560208401611578565b9150509250929050565b6001600160a01b0381168114610cb757600080fd5b803561164f8161162f565b919050565b600082601f83011261166557600080fd5b6107b183833560208501611578565b600080600080600080600060e0888a03121561168f57600080fd5b873561169a8161162f565b965060208801356116aa8161162f565b955060408801359450606088013567ffffffffffffffff8111156116cd57600080fd5b6116d98a828b01611654565b979a969950949760808101359660a0820135965060c090910135945092505050565b60ff81168114610cb757600080fd5b600080600080600080600060e0888a03121561172557600080fd5b8735611730816116fb565b965060208801356117408161162f565b955060408801356117508161162f565b945060608801356117608161162f565b93506080880135925060a088013567ffffffffffffffff81111561178357600080fd5b61178f8a828b01611654565b979a969950949793969295929450505060c09091013590565b6000806000606084860312156117bd57600080fd5b8335925060208401356117cf816116fb565b915060408401356117df816116fb565b809150509250925092565b60008060008060008060008060006101208a8c03121561180957600080fd5b89356118148161162f565b985061182260208b01611644565b975060408a0135965060608a013567ffffffffffffffff81111561184557600080fd5b6118518c828d01611654565b96505060808a0135945060a08a0135935060c08a0135925060e08a013591506101008a013567ffffffffffffffff81111561188b57600080fd5b6118978c828d01611654565b9150509295985092959850929598565b6000602082840312156118b957600080fd5b81356107b18161162f565b600080600080608085870312156118da57600080fd5b84356118e58161162f565b935060208501356118f58161162f565b925060408501356119058161162f565b9150606085013567ffffffffffffffff81111561192157600080fd5b8501601f8101871361193257600080fd5b803567ffffffffffffffff81111561194c5761194c611508565b61195b60208260051b01611547565b8082825260208201915060208360061b85010192508983111561197d57600080fd5b6020840193505b828410156119db576040848b03121561199c57600080fd5b6119a461151e565b84356119af8161162f565b815260208501356119bf8161162f565b8060208301525080835250602082019150604084019350611984565b969995985093965050505050565b600080604083850312156119fc57600080fd5b8235611a078161162f565b91506020830135611a178161162f565b809150509250929050565b60005b83811015611a3d578181015183820152602001611a25565b50506000910152565b60008151808452611a5e816020860160208601611a22565b601f01601f19169290920160200192915050565b6020815260006107b16020830184611a46565b600060208284031215611a9757600080fd5b81516107b1816116fb565b60ff881681526001600160a01b0387811660208301528681166040830152851660608201526080810184905260e060a08201819052600090611ae690830185611a46565b90508260c083015298975050505050505050565b6001600160a01b038981168252602082018990526040820188905286811660608301528516608082015260a0810184905260c0810183905261010060e08201819052600090611b4b90830184611a46565b9a9950505050505050505050565b600060208284031215611b6b57600080fd5b5051919050565b6001600160a01b03831681526040602082018190526000906107ae90830184611a46565b634e487b7160e01b600052601160045260246000fd5b600060018201611bbe57611bbe611b96565b5060010190565b84815260018060a01b0384166020820152826040820152608060608201526000611bf26080830184611a46565b9695505050505050565b60ff828116828216039081111561139d5761139d611b96565b6001815b6001841115611c5057808504811115611c3457611c34611b96565b6001841615611c4257908102905b60019390931c928002611c19565b935093915050565b600082611c675750600161139d565b81611c745750600061139d565b8160018114611c8a5760028114611c9457611cb0565b600191505061139d565b60ff841115611ca557611ca5611b96565b50506001821b61139d565b5060208310610133831016604e8410600b8410161715611cd3575081810a61139d565b611ce06000198484611c15565b8060001904821115611cf457611cf4611b96565b029392505050565b60006107b160ff841683611c58565b600082611d2857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611d5557600080fd5b81516107b18161162f565b805160208201516001600160e01b0319811691906004821015611d97576001600160e01b0319600483900360031b81901b82161692505b5050919050565b60008251611db0818460208701611a22565b9190910192915050565b82151581526040602082015260006107ae6040830184611a46565b60018060a01b0384168152826020820152606060408201526000611dfc6060830184611a46565b9594505050505056fea26469706673582212203ad667bd704c5733be943ea6faead7394ad540bddc64fd916f4a1554eadf7d8964736f6c634300081e0033";

type ArbGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbGatewayConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbGateway__factory extends ContractFactory {
  constructor(...args: ArbGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ArbGateway & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ArbGateway__factory {
    return super.connect(runner) as ArbGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbGatewayInterface {
    return new Interface(_abi) as ArbGatewayInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ArbGateway {
    return new Contract(address, _abi, runner) as unknown as ArbGateway;
  }
}
