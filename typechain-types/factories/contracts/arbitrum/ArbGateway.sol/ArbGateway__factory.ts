/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common.js";
import type {
  ArbGateway,
  ArbGatewayInterface,
} from "../../../../contracts/arbitrum/ArbGateway.sol/ArbGateway.js";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "BridgedCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "BridgedFrom",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "msg",
        type: "string",
      },
    ],
    name: "BridgedMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bridgeID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "BridgedTo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "arbSys",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "inbox",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "otherGateway",
        type: "address",
      },
    ],
    name: "InitializedGateway",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "home",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "other",
        type: "address",
      },
    ],
    name: "SetOtherToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "shouldBurn",
        type: "bool",
      },
    ],
    name: "SetToBurn",
    type: "event",
  },
  {
    inputs: [],
    name: "arbsys",
    outputs: [
      {
        internalType: "contract ArbSys",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "bridgeFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_msg",
        type: "string",
      },
    ],
    name: "bridgeMsg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Mintable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "maxSubmissionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPriceBid",
        type: "uint256",
      },
    ],
    name: "bridgeTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Mintable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "maxSubmissionCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPriceBid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "bridgeToPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "checkArb",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromValue",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "fromDecimals",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "toDecimals",
        type: "uint8",
      },
    ],
    name: "convertAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "inbox",
    outputs: [
      {
        internalType: "contract IInbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IInbox",
        name: "_inbox",
        type: "address",
      },
      {
        internalType: "address",
        name: "_otherGateway",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "home",
            type: "address",
          },
          {
            internalType: "address",
            name: "other",
            type: "address",
          },
        ],
        internalType: "struct ArbGateway.OtherTokens[]",
        name: "_otherTokens",
        type: "tuple[]",
      },
    ],
    name: "initializeGateway",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "otherGateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "otherTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "homeToken",
        type: "address",
      },
    ],
    name: "setBurnToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "home",
        type: "address",
      },
      {
        internalType: "address",
        name: "other",
        type: "address",
      },
    ],
    name: "setOtherToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "shouldBurnToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611e1b8061001f6000396000f3fe6080604052600436106101095760003560e01c8063b190be8511610095578063e3f30e7111610064578063e3f30e71146102a9578063eac96f23146102df578063ebde1bdb146102ff578063f2fde38b1461031f578063fb0e722b1461033f57600080fd5b8063b190be8514610226578063b44db82e14610246578063c358798014610259578063df36132b1461027957600080fd5b80638da5cb5b116100dc5780638da5cb5b1461017e57806390f7e1b3146101ab57806394ba88cb146101cb578063a51c8cb9146101fb578063affed0e01461021057600080fd5b806348875bf51461010e57806360e312a714610130578063715018a61461015657806374378d371461016b575b600080fd5b34801561011a57600080fd5b5061012e6101293660046115b4565b61035f565b005b61014361013e366004611654565b6103db565b6040519081526020015b60405180910390f35b34801561016257600080fd5b5061012e610700565b61012e6101793660046116ea565b610714565b34801561018a57600080fd5b506101936107fb565b6040516001600160a01b03909116815260200161014d565b3480156101b757600080fd5b50600154610193906001600160a01b031681565b3480156101d757600080fd5b506101eb6101e6366004611788565b610829565b604051901515815260200161014d565b34801561020757600080fd5b50610193606481565b34801561021c57600080fd5b5061014360045481565b34801561023257600080fd5b506101436102413660046117a5565b6109fc565b6101436102543660046117e7565b610a27565b34801561026557600080fd5b5061012e610274366004611788565b610ae2565b34801561028557600080fd5b506101eb610294366004611788565b60036020526000908152604090205460ff1681565b3480156102b557600080fd5b506101936102c4366004611788565b6002602052600090815260409020546001600160a01b031681565b3480156102eb57600080fd5b5061012e6102fa3660046118a4565b610c6b565b34801561030b57600080fd5b5061012e61031a3660046119c9565b610e83565b34801561032b57600080fd5b5061012e61033a366004611788565b610eeb565b34801561034b57600080fd5b50600054610193906001600160a01b031681565b33301461039f5760405162461bcd60e51b815260206004820152600960248201526827a7262cafa9a2a62360b91b60448201526064015b60405180910390fd5b817f07ce1e2038f0bf86b874f8aa890353ddfe00ccba5e000ad4b713e9b2ce90fa72826040516103cf9190611a52565b60405180910390a25050565b60006103f26001600160a01b038916333089610f29565b6001600160a01b03881660009081526003602052604090205460ff161561046e57604051630852cd8d60e31b8152600481018790526001600160a01b038916906342966c6890602401600060405180830381600087803b15801561045557600080fd5b505af1158015610469573d6000803e3d6000fd5b505050505b6000600454905060006374378d3760e01b8a6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e19190611a65565b6001600160a01b03808d166000908152600260205260409081902054905161051b9392919091169033908e908e908e908a90602401611a82565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915260008054919250906001600160a01b031615806106125760008054906101000a90046001600160a01b03166001600160a01b031663679b6ded34600160009054906101000a90046001600160a01b031660008c33338e8e8c6040518a63ffffffff1660e01b81526004016105c8989796959493929190611ada565b60206040518083038185885af11580156105e6573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061060b9190611b39565b9150610689565b6001546040516349460b4d60e11b815260649163928c169a91610643916001600160a01b0316908790600401611b52565b6020604051808303816000875af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106869190611b39565b91505b6004805490600061069983611b8c565b9190505550336001600160a01b03168c6001600160a01b0316857f9df4cc1e9776bb39b63370f1f8d003320ceeebe30547208fa83a07a3e984794b858f8f8f6040516106e89493929190611ba5565b60405180910390a450919a9950505050505050505050565b610708610f96565b6107126000610fc8565b565b61071d33610829565b80610740575061072b6107fb565b6001600160a01b0316336001600160a01b0316145b61077b5760405162461bcd60e51b815260206004820152600c60248201526b4e4f545f415242495452554d60a01b6044820152606401610396565b6107e28388886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102419190611a65565b92506107f2868686868686611039565b50505050505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b600080546001600160a01b031615801561088257600154610866906001600160a01b03167311110000000000000000000000000000000011110190565b6001600160a01b0316836001600160a01b031614915050919050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663e78cea926040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fa9190611bdc565b9050806001600160a01b0316846001600160a01b03161480156109f457506001546040805163ab5d894360e01b815290516001600160a01b039283169284169163ab5d89439160048083019260209291908290030181865afa158015610964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109889190611bdc565b6001600160a01b03166380648b026040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e99190611bdc565b6001600160a01b0316145b949350505050565b6000610a088284611bf9565b610a1390600a611cf9565b610a1d9085611d08565b90505b9392505050565b600080600080610a368561130e565b60405163d505accf60e01b8152336004820152306024820152604481018f9052606481018a905260ff8416608482015260a4810183905260c4810182905292955090935091506001600160a01b038e169063d505accf9060e401600060405180830381600087803b158015610aaa57600080fd5b505af1158015610abe573d6000803e3d6000fd5b50505050610ad18d8d8d8d8d8d8d6103db565b9d9c50505050505050505050505050565b610aea610f96565b6001600160a01b03811660009081526003602052604090205460ff16610b11576001610b14565b60005b6001600160a01b0382166000908152600360205260409020805460ff1916911515918217905560ff1615610c15576040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baf9190611b39565b90508015610c1257604051630852cd8d60e31b8152600481018290526001600160a01b038316906342966c6890602401600060405180830381600087803b158015610bf957600080fd5b505af1158015610c0d573d6000803e3d6000fd5b505050505b50505b6001600160a01b03811660008181526003602090815260409182902054915160ff909216151582527f7740f93df62e6714ab915a82ef699f7a6db1f754498e2e363890d286aba7dcab910160405180910390a250565b6000610c75611358565b805490915060ff600160401b820416159067ffffffffffffffff16600081158015610c9d5750825b905060008267ffffffffffffffff166001148015610cba5750303b155b905081158015610cc8575080155b15610ce65760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610d1057845460ff60401b1916600160401b1785555b610d1989611383565b600080546001600160a01b038a81166001600160a01b0319928316811790935560018054918b16919092168117909155604080516064815260208101939093528201527f59967eb20e0c027d0c4fe6e11fcec2273a08036e26740962b3ef3a23f107f93c9060600160405180910390a160005b8651811015610e31576000878281518110610da957610da9611d2a565b602090810291909101810151808201805182516001600160a01b0390811660009081526002865260409081902080546001600160a01b0319169383169390931790925583519251915191811682529294509116917fd7b0a59830045bcaf6233768890edf6fcda71a5654d385440db294eb92b9a7db910160405180910390a250600101610d8c565b508315610e7857845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b610e8b610f96565b6001600160a01b0382811660008181526002602090815260409182902080546001600160a01b0319169486169485179055905192835290917fd7b0a59830045bcaf6233768890edf6fcda71a5654d385440db294eb92b9a7db91016103cf565b610ef3610f96565b6001600160a01b038116610f1d57604051631e4fbdf760e01b815260006004820152602401610396565b610f2681610fc8565b50565b6040516001600160a01b038481166024830152838116604483015260648201839052610f909186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611394565b50505050565b33610f9f6107fb565b6001600160a01b0316146107125760405163118cdaa760e01b8152336004820152602401610396565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6040516370a0823160e01b8152306004820152869084906001600160a01b038316906370a0823190602401602060405180830381865afa158015611081573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a59190611b39565b106110c3576110be6001600160a01b0382168686611405565b611126565b6040516340c10f1960e01b81526001600160a01b038681166004830152602482018690528216906340c10f1990604401600060405180830381600087803b15801561110d57600080fd5b505af1158015611121573d6000803e3d6000fd5b505050505b8251156112b55760006348875bf560e01b6111438583600461143b565b61114c90611d40565b6001600160e01b03191614905080156111ff576000306001600160a01b0316856040516111799190611d7e565b6000604051808303816000865af19150503d80600081146111b6576040519150601f19603f3d011682016040523d82523d6000602084013e6111bb565b606091505b50509050806111f95760405162461bcd60e51b815260206004820152600a6024820152691354d1d7d1905253115160b21b6044820152606401610396565b506112b3565b6001600160a01b0386163b156112b357600080876001600160a01b0316620c35008760405161122e9190611d7e565b60006040518083038160008787f1925050503d806000811461126c576040519150601f19603f3d011682016040523d82523d6000602084013e611271565b606091505b5091509150847f840af9ca2ec8c881ca3de23cf221981cd4118acdefeb96233fbdf0e365d7615583836040516112a8929190611d9a565b60405180910390a250505b505b856001600160a01b0316876001600160a01b0316837f42365fe0dfe76a5961cdef1960c9135c4097a1b6c253d8c1d74f5d27e41cbb8e8888886040516112fd93929190611db5565b60405180910390a450505050505050565b600080600083516041036113385750505060208101516040820151606083015160001a9190611351565b604051634be6321b60e01b815260040160405180910390fd5b9193909250565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005b92915050565b61138b6114a1565b610f26816114c6565b600080602060008451602086016000885af1806113b7576040513d6000823e3d81fd5b50506000513d915081156113cf5780600114156113dc565b6001600160a01b0384163b155b15610f9057604051635274afe760e01b81526001600160a01b0385166004820152602401610396565b6040516001600160a01b0383811660248301526044820183905261143691859182169063a9059cbb90606401610f5e565b505050565b6060835182811161144a578092505b838111611455578093505b5081831015610a205750604051828203848401601f19601f830181165b828101518582015281018061147257505050806020830101600081526020810160405250808252509392505050565b6114a96114ce565b61071257604051631afcd79f60e31b815260040160405180910390fd5b610ef36114a1565b60006114d8611358565b54600160401b900460ff16919050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611521576115216114e8565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611550576115506114e8565b604052919050565b60008067ffffffffffffffff841115611573576115736114e8565b50601f8301601f191660200161158881611527565b91505082815283838301111561159d57600080fd5b828260208301376000602084830101529392505050565b600080604083850312156115c757600080fd5b82359150602083013567ffffffffffffffff8111156115e557600080fd5b8301601f810185136115f657600080fd5b61160585823560208401611558565b9150509250929050565b6001600160a01b0381168114610f2657600080fd5b803561162f8161160f565b919050565b600082601f83011261164557600080fd5b610a2083833560208501611558565b600080600080600080600060e0888a03121561166f57600080fd5b873561167a8161160f565b9650602088013561168a8161160f565b955060408801359450606088013567ffffffffffffffff8111156116ad57600080fd5b6116b98a828b01611634565b979a969950949760808101359660a0820135965060c090910135945092505050565b60ff81168114610f2657600080fd5b600080600080600080600060e0888a03121561170557600080fd5b8735611710816116db565b965060208801356117208161160f565b955060408801356117308161160f565b945060608801356117408161160f565b93506080880135925060a088013567ffffffffffffffff81111561176357600080fd5b61176f8a828b01611634565b979a969950949793969295929450505060c09091013590565b60006020828403121561179a57600080fd5b8135610a208161160f565b6000806000606084860312156117ba57600080fd5b8335925060208401356117cc816116db565b915060408401356117dc816116db565b809150509250925092565b60008060008060008060008060006101208a8c03121561180657600080fd5b89356118118161160f565b985061181f60208b01611624565b975060408a0135965060608a013567ffffffffffffffff81111561184257600080fd5b61184e8c828d01611634565b96505060808a0135945060a08a0135935060c08a0135925060e08a013591506101008a013567ffffffffffffffff81111561188857600080fd5b6118948c828d01611634565b9150509295985092959850929598565b600080600080608085870312156118ba57600080fd5b84356118c58161160f565b935060208501356118d58161160f565b925060408501356118e58161160f565b9150606085013567ffffffffffffffff81111561190157600080fd5b8501601f8101871361191257600080fd5b803567ffffffffffffffff81111561192c5761192c6114e8565b61193b60208260051b01611527565b8082825260208201915060208360061b85010192508983111561195d57600080fd5b6020840193505b828410156119bb576040848b03121561197c57600080fd5b6119846114fe565b843561198f8161160f565b8152602085013561199f8161160f565b8060208301525080835250602082019150604084019350611964565b969995985093965050505050565b600080604083850312156119dc57600080fd5b82356119e78161160f565b915060208301356119f78161160f565b809150509250929050565b60005b83811015611a1d578181015183820152602001611a05565b50506000910152565b60008151808452611a3e816020860160208601611a02565b601f01601f19169290920160200192915050565b602081526000610a206020830184611a26565b600060208284031215611a7757600080fd5b8151610a20816116db565b60ff881681526001600160a01b0387811660208301528681166040830152851660608201526080810184905260e060a08201819052600090611ac690830185611a26565b90508260c083015298975050505050505050565b6001600160a01b038981168252602082018990526040820188905286811660608301528516608082015260a0810184905260c0810183905261010060e08201819052600090611b2b90830184611a26565b9a9950505050505050505050565b600060208284031215611b4b57600080fd5b5051919050565b6001600160a01b0383168152604060208201819052600090610a1d90830184611a26565b634e487b7160e01b600052601160045260246000fd5b600060018201611b9e57611b9e611b76565b5060010190565b84815260018060a01b0384166020820152826040820152608060608201526000611bd26080830184611a26565b9695505050505050565b600060208284031215611bee57600080fd5b8151610a208161160f565b60ff828116828216039081111561137d5761137d611b76565b6001815b6001841115611c4d57808504811115611c3157611c31611b76565b6001841615611c3f57908102905b60019390931c928002611c16565b935093915050565b600082611c645750600161137d565b81611c715750600061137d565b8160018114611c875760028114611c9157611cad565b600191505061137d565b60ff841115611ca257611ca2611b76565b50506001821b61137d565b5060208310610133831016604e8410600b8410161715611cd0575081810a61137d565b611cdd6000198484611c12565b8060001904821115611cf157611cf1611b76565b029392505050565b6000610a2060ff841683611c55565b600082611d2557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b805160208201516001600160e01b0319811691906004821015611d77576001600160e01b0319600483900360031b81901b82161692505b5050919050565b60008251611d90818460208701611a02565b9190910192915050565b8215158152604060208201526000610a1d6040830184611a26565b60018060a01b0384168152826020820152606060408201526000611ddc6060830184611a26565b9594505050505056fea2646970667358221220b0e8ff80670c645935ab2dbb8f3ffc628e924546b6fa84a352867a8680d7303d64736f6c634300081e0033";

type ArbGatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbGatewayConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbGateway__factory extends ContractFactory {
  constructor(...args: ArbGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ArbGateway & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ArbGateway__factory {
    return super.connect(runner) as ArbGateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbGatewayInterface {
    return new Interface(_abi) as ArbGatewayInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ArbGateway {
    return new Contract(address, _abi, runner) as unknown as ArbGateway;
  }
}
