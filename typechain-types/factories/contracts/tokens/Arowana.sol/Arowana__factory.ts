/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common.js";
import type {
  Arowana,
  ArowanaInterface,
} from "../../../../contracts/tokens/Arowana.sol/Arowana.js";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61018060405234801561001157600080fd5b506040518060400160405280600781526020016641726f77616e6160c81b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600781526020016641726f77616e6160c81b8152506040518060400160405280600381526020016241525760e81b815250816003908161009891906103f7565b5060046100a582826103f7565b506100b59150839050600561017e565b610120526100c481600661017e565b61014052815160208084019190912060e052815190820120610100524660a05261015160e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c052506b019d971e4fe8401e740000006101608190526101799033906101b1565b610548565b600060208351101561019a57610193836101f0565b90506101ab565b816101a584826103f7565b5060ff90505b92915050565b6001600160a01b0382166101e05760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6101ec6000838361022e565b5050565b600080829050601f8151111561021b578260405163305a27a960e01b81526004016101d791906104b5565b805161022682610503565b179392505050565b6001600160a01b03831661025957806002600082825461024e9190610527565b909155506102cb9050565b6001600160a01b038316600090815260208190526040902054818110156102ac5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016101d7565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166102e757600280548290039055610306565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161034b91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061038257607f821691505b6020821081036103a257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103f257806000526020600020601f840160051c810160208510156103cf5750805b601f840160051c820191505b818110156103ef57600081556001016103db565b50505b505050565b81516001600160401b0381111561041057610410610358565b6104248161041e845461036e565b846103a8565b6020601f82116001811461045857600083156104405750848201515b600019600385901b1c1916600184901b1784556103ef565b600084815260208120601f198516915b828110156104885787850151825560209485019460019092019101610468565b50848210156104a65786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b602081526000825180602084015260005b818110156104e357602081860181015160408684010152016104c6565b506000604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156103a25760001960209190910360031b1b16919050565b808201808211156101ab57634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e05161010051610120516101405161016051610fef6105ad6000396000610234015260006107d9015260006107ac0152600061071e015260006106f6015260006106510152600061067b015260006106a50152610fef6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806379cc679011610097578063a9059cbb11610066578063a9059cbb14610209578063d505accf1461021c578063d5abeb011461022f578063dd62ed3e1461025657600080fd5b806379cc6790146101c05780637ecebe00146101d357806384b0196e146101e657806395d89b411461020157600080fd5b8063313ce567116100d3578063313ce5671461016b5780633644e5151461017a57806342966c681461018257806370a082311461019757600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d61028f565b60405161011a9190610d39565b60405180910390f35b610136610131366004610d6f565b610321565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610d99565b61033b565b6040516012815260200161011a565b61014a61035f565b610195610190366004610dd6565b61036e565b005b61014a6101a5366004610def565b6001600160a01b031660009081526020819052604090205490565b6101956101ce366004610d6f565b61037b565b61014a6101e1366004610def565b610394565b6101ee6103b2565b60405161011a9796959493929190610e0a565b61010d6103f8565b610136610217366004610d6f565b610407565b61019561022a366004610ea2565b610415565b61014a7f000000000000000000000000000000000000000000000000000000000000000081565b61014a610264366004610f15565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461029e90610f48565b80601f01602080910402602001604051908101604052809291908181526020018280546102ca90610f48565b80156103175780601f106102ec57610100808354040283529160200191610317565b820191906000526020600020905b8154815290600101906020018083116102fa57829003601f168201915b5050505050905090565b60003361032f818585610554565b60019150505b92915050565b600033610349858285610566565b6103548585856105e5565b506001949350505050565b6000610369610644565b905090565b610378338261076f565b50565b610386823383610566565b610390828261076f565b5050565b6001600160a01b038116600090815260076020526040812054610335565b6000606080600080600060606103c66107a5565b6103ce6107d2565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b60606004805461029e90610f48565b60003361032f8185856105e5565b8342111561043e5760405163313c898160e11b8152600481018590526024015b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861048b8c6001600160a01b0316600090815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006104e6826107ff565b905060006104f68287878761082c565b9050896001600160a01b0316816001600160a01b03161461053d576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610435565b6105488a8a8a610554565b50505050505050505050565b610561838383600161085a565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156105df57818110156105d057604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610435565b6105df8484848403600061085a565b50505050565b6001600160a01b03831661060f57604051634b637e8f60e11b815260006004820152602401610435565b6001600160a01b0382166106395760405163ec442f0560e01b815260006004820152602401610435565b61056183838361092f565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561069d57507f000000000000000000000000000000000000000000000000000000000000000046145b156106c757507f000000000000000000000000000000000000000000000000000000000000000090565b610369604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b03821661079957604051634b637e8f60e11b815260006004820152602401610435565b6103908260008361092f565b60606103697f00000000000000000000000000000000000000000000000000000000000000006005610a59565b60606103697f00000000000000000000000000000000000000000000000000000000000000006006610a59565b600061033561080c610644565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061083e88888888610b04565b92509250925061084e8282610bd3565b50909695505050505050565b6001600160a01b0384166108845760405163e602df0560e01b815260006004820152602401610435565b6001600160a01b0383166108ae57604051634a1406b160e11b815260006004820152602401610435565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156105df57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161092191815260200190565b60405180910390a350505050565b6001600160a01b03831661095a57806002600082825461094f9190610f82565b909155506109cc9050565b6001600160a01b038316600090815260208190526040902054818110156109ad5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610435565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166109e857600280548290039055610a07565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a4c91815260200190565b60405180910390a3505050565b606060ff8314610a7357610a6c83610c8c565b9050610335565b818054610a7f90610f48565b80601f0160208091040260200160405190810160405280929190818152602001828054610aab90610f48565b8015610af85780601f10610acd57610100808354040283529160200191610af8565b820191906000526020600020905b815481529060010190602001808311610adb57829003601f168201915b50505050509050610335565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610b3f5750600091506003905082610bc9565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610b93573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610bbf57506000925060019150829050610bc9565b9250600091508190505b9450945094915050565b6000826003811115610be757610be7610fa3565b03610bf0575050565b6001826003811115610c0457610c04610fa3565b03610c225760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610c3657610c36610fa3565b03610c575760405163fce698f760e01b815260048101829052602401610435565b6003826003811115610c6b57610c6b610fa3565b03610390576040516335e2f38360e21b815260048101829052602401610435565b60606000610c9983610ccb565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561033557604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015610d1957602081850181015186830182015201610cfd565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d4c6020830184610cf3565b9392505050565b80356001600160a01b0381168114610d6a57600080fd5b919050565b60008060408385031215610d8257600080fd5b610d8b83610d53565b946020939093013593505050565b600080600060608486031215610dae57600080fd5b610db784610d53565b9250610dc560208501610d53565b929592945050506040919091013590565b600060208284031215610de857600080fd5b5035919050565b600060208284031215610e0157600080fd5b610d4c82610d53565b60ff60f81b8816815260e060208201526000610e2960e0830189610cf3565b8281036040840152610e3b8189610cf3565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015610e91578351835260209384019390920191600101610e73565b50909b9a5050505050505050505050565b600080600080600080600060e0888a031215610ebd57600080fd5b610ec688610d53565b9650610ed460208901610d53565b95506040880135945060608801359350608088013560ff81168114610ef857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610f2857600080fd5b610f3183610d53565b9150610f3f60208401610d53565b90509250929050565b600181811c90821680610f5c57607f821691505b602082108103610f7c57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561033557634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220f6302ce700503012fb4cecbe365e0546ba2dd870985fdb4d122a49653c9a8a6764736f6c634300081e0033";

type ArowanaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArowanaConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Arowana__factory extends ContractFactory {
  constructor(...args: ArowanaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Arowana & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Arowana__factory {
    return super.connect(runner) as Arowana__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArowanaInterface {
    return new Interface(_abi) as ArowanaInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Arowana {
    return new Contract(address, _abi, runner) as unknown as Arowana;
  }
}
