/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from"./index.js";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: "Arowana",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Arowana__factory>;
    getContractFactory(
      name: "InitializableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.InitializableProxy__factory>;
    getContractFactory(
      name: "Lock",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Lock__factory>;
    getContractFactory(
      name: "WithSettler",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.WithSettler__factory>;
    getContractFactory(
      name: "SigLib",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.SigLib__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IInitializableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IInitializableProxy__factory>;
    getContractFactory(
      name: "IGateway",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IGateway__factory>;
    getContractFactory(
      name: "IERC20Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Mintable__factory>;
    getContractFactory(
      name: "IERC20Exp",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Exp__factory>;
    getContractFactory(
      name: "ARWSupply",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ARWSupply__factory>;
    getContractFactory(
      name: "GreeterParent",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.GreeterParent__factory>;
    getContractFactory(
      name: "GreeterChild",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.GreeterChild__factory>;
    getContractFactory(
      name: "Greeter",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Greeter__factory>;
    getContractFactory(
      name: "ArbGatewaySettle",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ArbGatewaySettle__factory>;
    getContractFactory(
      name: "ArbGateway",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ArbGateway__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ShortStrings__factory>;
    getContractFactory(
      name: "Nonces",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Nonces__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.EIP712__factory>;
    getContractFactory(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ECDSA__factory>;
    getContractFactory(
      name: "Address",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Address__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ERC1967Utils",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC1967Utils__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "IERC1967",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1967__factory>;
    getContractFactory(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1363__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ArbSys",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ArbSys__factory>;
    getContractFactory(
      name: "NodeInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.NodeInterface__factory>;
    getContractFactory(
      name: "IGasRefunder",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IGasRefunder__factory>;
    getContractFactory(
      name: "Outbox",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Outbox__factory>;
    getContractFactory(
      name: "ISequencerInbox",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ISequencerInbox__factory>;
    getContractFactory(
      name: "IFeeTokenPricer",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IFeeTokenPricer__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IOutbox",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IOutbox__factory>;
    getContractFactory(
      name: "IInboxBase",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IInboxBase__factory>;
    getContractFactory(
      name: "IInbox",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IInbox__factory>;
    getContractFactory(
      name: "IDelayedMessageProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IDelayedMessageProvider__factory>;
    getContractFactory(
      name: "IBridge",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IBridge__factory>;
    getContractFactory(
      name: "AbsOutbox",
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.AbsOutbox__factory>;

    getContractAt(
      name: "ERC20Mock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20Mock>;
    getContractAt(
      name: "Arowana",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Arowana>;
    getContractAt(
      name: "InitializableProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.InitializableProxy>;
    getContractAt(
      name: "Lock",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Lock>;
    getContractAt(
      name: "WithSettler",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.WithSettler>;
    getContractAt(
      name: "SigLib",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.SigLib>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IInitializableProxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IInitializableProxy>;
    getContractAt(
      name: "IGateway",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IGateway>;
    getContractAt(
      name: "IERC20Mintable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Mintable>;
    getContractAt(
      name: "IERC20Exp",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Exp>;
    getContractAt(
      name: "ARWSupply",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ARWSupply>;
    getContractAt(
      name: "GreeterParent",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.GreeterParent>;
    getContractAt(
      name: "GreeterChild",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.GreeterChild>;
    getContractAt(
      name: "Greeter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Greeter>;
    getContractAt(
      name: "ArbGatewaySettle",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ArbGatewaySettle>;
    getContractAt(
      name: "ArbGateway",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ArbGateway>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "Strings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "ShortStrings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ShortStrings>;
    getContractAt(
      name: "Nonces",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Nonces>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "EIP712",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.EIP712>;
    getContractAt(
      name: "ECDSA",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ECDSA>;
    getContractAt(
      name: "Address",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Address>;
    getContractAt(
      name: "SafeERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "ERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "ERC20Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "Proxy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ERC1967Utils",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ERC1967Utils>;
    getContractAt(
      name: "IBeacon",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "IERC5267",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "IERC1967",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC1967>;
    getContractAt(
      name: "IERC1363",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC1363>;
    getContractAt(
      name: "IERC721Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC1155Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ArbSys",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ArbSys>;
    getContractAt(
      name: "NodeInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.NodeInterface>;
    getContractAt(
      name: "IGasRefunder",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IGasRefunder>;
    getContractAt(
      name: "Outbox",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Outbox>;
    getContractAt(
      name: "ISequencerInbox",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ISequencerInbox>;
    getContractAt(
      name: "IFeeTokenPricer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IFeeTokenPricer>;
    getContractAt(
      name: "IOwnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IOutbox",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IOutbox>;
    getContractAt(
      name: "IInboxBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IInboxBase>;
    getContractAt(
      name: "IInbox",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IInbox>;
    getContractAt(
      name: "IDelayedMessageProvider",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IDelayedMessageProvider>;
    getContractAt(
      name: "IBridge",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IBridge>;
    getContractAt(
      name: "AbsOutbox",
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.AbsOutbox>;

    deployContract(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ERC20Mock>;
    deployContract(
      name: "Arowana",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Arowana>;
    deployContract(
      name: "InitializableProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.InitializableProxy>;
    deployContract(
      name: "Lock",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Lock>;
    deployContract(
      name: "WithSettler",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.WithSettler>;
    deployContract(
      name: "SigLib",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SigLib>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IInitializableProxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IInitializableProxy>;
    deployContract(
      name: "IGateway",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IGateway>;
    deployContract(
      name: "IERC20Mintable",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Mintable>;
    deployContract(
      name: "IERC20Exp",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Exp>;
    deployContract(
      name: "ARWSupply",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ARWSupply>;
    deployContract(
      name: "GreeterParent",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.GreeterParent>;
    deployContract(
      name: "GreeterChild",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.GreeterChild>;
    deployContract(
      name: "Greeter",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Greeter>;
    deployContract(
      name: "ArbGatewaySettle",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ArbGatewaySettle>;
    deployContract(
      name: "ArbGateway",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ArbGateway>;
    deployContract(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "Strings",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "Nonces",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Nonces>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "ECDSA",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "Address",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Address>;
    deployContract(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ERC20Burnable>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "ERC1967Utils",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ERC1967Utils>;
    deployContract(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IBeacon>;
    deployContract(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "IERC1967",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC1967>;
    deployContract(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC1363>;
    deployContract(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "ArbSys",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ArbSys>;
    deployContract(
      name: "NodeInterface",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.NodeInterface>;
    deployContract(
      name: "IGasRefunder",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IGasRefunder>;
    deployContract(
      name: "Outbox",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Outbox>;
    deployContract(
      name: "ISequencerInbox",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ISequencerInbox>;
    deployContract(
      name: "IFeeTokenPricer",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IFeeTokenPricer>;
    deployContract(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IOwnable>;
    deployContract(
      name: "IOutbox",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IOutbox>;
    deployContract(
      name: "IInboxBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IInboxBase>;
    deployContract(
      name: "IInbox",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IInbox>;
    deployContract(
      name: "IDelayedMessageProvider",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IDelayedMessageProvider>;
    deployContract(
      name: "IBridge",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IBridge>;
    deployContract(
      name: "AbsOutbox",
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.AbsOutbox>;

    deployContract(
      name: "ERC20Mock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ERC20Mock>;
    deployContract(
      name: "Arowana",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Arowana>;
    deployContract(
      name: "InitializableProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.InitializableProxy>;
    deployContract(
      name: "Lock",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Lock>;
    deployContract(
      name: "WithSettler",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.WithSettler>;
    deployContract(
      name: "SigLib",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SigLib>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IInitializableProxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IInitializableProxy>;
    deployContract(
      name: "IGateway",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IGateway>;
    deployContract(
      name: "IERC20Mintable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Mintable>;
    deployContract(
      name: "IERC20Exp",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Exp>;
    deployContract(
      name: "ARWSupply",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ARWSupply>;
    deployContract(
      name: "GreeterParent",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.GreeterParent>;
    deployContract(
      name: "GreeterChild",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.GreeterChild>;
    deployContract(
      name: "Greeter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Greeter>;
    deployContract(
      name: "ArbGatewaySettle",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ArbGatewaySettle>;
    deployContract(
      name: "ArbGateway",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ArbGateway>;
    deployContract(
      name: "ContextUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "OwnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "Strings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Strings>;
    deployContract(
      name: "ShortStrings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "Nonces",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Nonces>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Errors>;
    deployContract(
      name: "EIP712",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "ECDSA",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ECDSA>;
    deployContract(
      name: "Address",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Address>;
    deployContract(
      name: "SafeERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "ERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "ERC20Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ERC20Burnable>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "Proxy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Proxy>;
    deployContract(
      name: "ERC1967Utils",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ERC1967Utils>;
    deployContract(
      name: "IBeacon",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IBeacon>;
    deployContract(
      name: "IERC5267",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "IERC1967",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC1967>;
    deployContract(
      name: "IERC1363",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC1363>;
    deployContract(
      name: "IERC721Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC20Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC1155Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "ArbSys",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ArbSys>;
    deployContract(
      name: "NodeInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.NodeInterface>;
    deployContract(
      name: "IGasRefunder",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IGasRefunder>;
    deployContract(
      name: "Outbox",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Outbox>;
    deployContract(
      name: "ISequencerInbox",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ISequencerInbox>;
    deployContract(
      name: "IFeeTokenPricer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IFeeTokenPricer>;
    deployContract(
      name: "IOwnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IOwnable>;
    deployContract(
      name: "IOutbox",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IOutbox>;
    deployContract(
      name: "IInboxBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IInboxBase>;
    deployContract(
      name: "IInbox",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IInbox>;
    deployContract(
      name: "IDelayedMessageProvider",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IDelayedMessageProvider>;
    deployContract(
      name: "IBridge",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IBridge>;
    deployContract(
      name: "AbsOutbox",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.AbsOutbox>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer,
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<ethers.Contract>;
  }
}
